<<<<<<< HEAD
==146606== Memcheck, a memory error detector
==146606== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==146606== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==146606== Command: ../json -s ../data/string_bad.txt
==146606== 
==146606== Invalid read of size 1
==146606==    at 0x483EF54: strlen (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==146606==    by 0x109794: AllocateBuffer (stringmodel.c:86)
==146606==    by 0x1096B5: handle_event (statemodel.c:26)
==146606==    by 0x109A7F: accept_string (parser.c:56)
==146606==    by 0x10945D: main (main.c:79)
==146606==  Address 0x4a582bb is 0 bytes after a block of size 27 alloc'd
==146606==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==146606==    by 0x1093D0: main (main.c:55)
==146606== 
==146606== Invalid read of size 1
==146606==    at 0x109858: ReplaceCharacter (stringmodel.c:108)
==146606==    by 0x1096B5: handle_event (statemodel.c:26)
==146606==    by 0x109A7F: accept_string (parser.c:56)
==146606==    by 0x10945D: main (main.c:79)
==146606==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==146606== 
==146606== 
==146606== Process terminating with default action of signal 11 (SIGSEGV)
==146606==  Access not within mapped region at address 0x0
==146606==    at 0x109858: ReplaceCharacter (stringmodel.c:108)
==146606==    by 0x1096B5: handle_event (statemodel.c:26)
==146606==    by 0x109A7F: accept_string (parser.c:56)
==146606==    by 0x10945D: main (main.c:79)
==146606==  If you believe this happened as a result of a stack
==146606==  overflow in your program's main thread (unlikely but
==146606==  possible), you can try to increase the size of the
==146606==  main thread stack using the --main-stacksize= flag.
==146606==  The main thread stack size used in this run was 8388608.
==146606== 
==146606== HEAP SUMMARY:
==146606==     in use at exit: 151 bytes in 3 blocks
==146606==   total heap usage: 5 allocs, 2 frees, 8,815 bytes allocated
==146606== 
==146606== LEAK SUMMARY:
==146606==    definitely lost: 0 bytes in 0 blocks
==146606==    indirectly lost: 0 bytes in 0 blocks
==146606==      possibly lost: 0 bytes in 0 blocks
==146606==    still reachable: 151 bytes in 3 blocks
==146606==         suppressed: 0 bytes in 0 blocks
==146606== Rerun with --leak-check=full to see details of leaked memory
==146606== 
==146606== For lists of detected and suppressed errors, rerun with: -s
==146606== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
=======
==149586== Memcheck, a memory error detector
==149586== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==149586== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==149586== Command: ../json -s ../data/string_bad.txt
==149586== 
SYNTAX ERROR: '\n' is not a valid escape code
Parsing ../data/string_bad.txt failed
==149586== 
==149586== HEAP SUMMARY:
==149586==     in use at exit: 472 bytes in 1 blocks
==149586==   total heap usage: 5 allocs, 4 frees, 17,064 bytes allocated
==149586== 
==149586== LEAK SUMMARY:
==149586==    definitely lost: 0 bytes in 0 blocks
==149586==    indirectly lost: 0 bytes in 0 blocks
==149586==      possibly lost: 0 bytes in 0 blocks
==149586==    still reachable: 472 bytes in 1 blocks
==149586==         suppressed: 0 bytes in 0 blocks
==149586== Rerun with --leak-check=full to see details of leaked memory
==149586== 
==149586== For lists of detected and suppressed errors, rerun with: -s
==149586== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
>>>>>>> 149606adc8b3f0cb79ed9f7c590375c37f62be46
